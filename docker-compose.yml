version: '3'

services:
  backend:
    build: ./backend
    restart: unless-stopped
    volumes:
      - "./backend/src:/app/src"
    ports:
      # - "9090:9090" # Потом прикрыть эти порты наружу
    env_file:
      - .env.prod
    depends_on:
      - postgres
    networks:
      - infrastructure
    command: >
      npm run start

  postgres:
    image: postgres:12-alpine
    container_name: postgres
    volumes:
      - ./.postgres/data:/var/lib/postgresql/data/
    # ports:
    #   - "5432:5432" # Потом прикрыть эти порты наружу
    env_file:
      - .env.prod
    networks:
      - infrastructure

  frontend:
    build: ./frontend
    container_name: frontend
    restart: unless-stopped
    volumes:
      - "./frontent/src:/app/src"
    depends_on:
      - backend
    env_file:
      - .env.prod
    networks:
      - infrastructure
    command: >
      npm run server

  nginx:
    image: jonasal/nginx-certbot:latest
    container_name: nginx
    restart: unless-stopped
    env_file:
      - .env.prod
    volumes:
      - .certbot:/etc/letsencrypt
      - ./nginx/conf.d:/etc/nginx/user_conf.d
      - ./nginx/www:/etc/nginx/www/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - infrastructure

networks:
  infrastructure:
    driver: bridge
    # external: true
    # driver: overlay
    # name: infrastructure
 
